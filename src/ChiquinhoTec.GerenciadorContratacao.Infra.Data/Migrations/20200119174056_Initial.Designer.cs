// <auto-generated />
using System;
using ChiquinhoTec.GerenciadorContratacao.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ChiquinhoTec.GerenciadorContratacao.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200119174056_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ChiquinhoTec.GerenciadorContratacao.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnName("complement")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deleted_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("null");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnName("district")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("true");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnName("postal_code")
                        .HasColumnType("varchar(9)");

                    b.Property<bool>("PrimaryAddress")
                        .HasColumnName("primary_address")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("state")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnName("street")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("StreetNumber")
                        .HasColumnName("street_number")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("null");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("1");

                    b.Property<Guid>("person_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("person_id");

                    b.ToTable("address");
                });

            modelBuilder.Entity("ChiquinhoTec.GerenciadorContratacao.Domain.Entities.EntityAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deleted_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("null");

                    b.Property<Guid>("EntityId")
                        .HasColumnName("entity_id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("true");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Rev")
                        .IsRequired()
                        .HasColumnName("rev")
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("null");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("1");

                    b.HasKey("Id");

                    b.ToTable("entity_audit");
                });

            modelBuilder.Entity("ChiquinhoTec.GerenciadorContratacao.Domain.Entities.Interview", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deleted_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("null");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("true");

                    b.Property<DateTime>("SchedulingDate")
                        .HasColumnName("scheduling_date")
                        .HasColumnType("timestamptz");

                    b.Property<int>("Squad")
                        .HasColumnName("squad")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("null");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("1");

                    b.Property<Guid>("person_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("person_id");

                    b.ToTable("interview");
                });

            modelBuilder.Entity("ChiquinhoTec.GerenciadorContratacao.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("birth_date")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deleted_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("null");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("true");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProfessionalDescription")
                        .IsRequired()
                        .HasColumnName("professional_description")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Profile")
                        .IsRequired()
                        .HasColumnName("profile")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("null");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("1");

                    b.HasKey("Id");

                    b.ToTable("person");
                });

            modelBuilder.Entity("ChiquinhoTec.GerenciadorContratacao.Domain.Entities.Address", b =>
                {
                    b.HasOne("ChiquinhoTec.GerenciadorContratacao.Domain.Entities.Person", "Person")
                        .WithMany("Adresses")
                        .HasForeignKey("person_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ChiquinhoTec.GerenciadorContratacao.Domain.Entities.Interview", b =>
                {
                    b.HasOne("ChiquinhoTec.GerenciadorContratacao.Domain.Entities.Person", "Person")
                        .WithMany("Interviews")
                        .HasForeignKey("person_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ChiquinhoTec.GerenciadorContratacao.Domain.Entities.Person", b =>
                {
                    b.OwnsOne("ChiquinhoTec.GerenciadorContratacao.Domain.ValueObjects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("cpf")
                                .HasColumnType("varchar(11)");

                            b1.HasKey("PersonId");

                            b1.HasIndex("Value");

                            b1.ToTable("person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("ChiquinhoTec.GerenciadorContratacao.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("email")
                                .HasColumnType("varchar(100)");

                            b1.HasKey("PersonId");

                            b1.HasIndex("Value");

                            b1.ToTable("person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
